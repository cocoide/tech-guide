// Code generated by MockGen. DO NOT EDIT.
// Source: favorite.go

// Package mock_repository is a generated GoMock package.
package mock_repository

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockFavoriteRepo is a mock of FavoriteRepo interface.
type MockFavoriteRepo struct {
	ctrl     *gomock.Controller
	recorder *MockFavoriteRepoMockRecorder
}

// MockFavoriteRepoMockRecorder is the mock recorder for MockFavoriteRepo.
type MockFavoriteRepoMockRecorder struct {
	mock *MockFavoriteRepo
}

// NewMockFavoriteRepo creates a new mock instance.
func NewMockFavoriteRepo(ctrl *gomock.Controller) *MockFavoriteRepo {
	mock := &MockFavoriteRepo{ctrl: ctrl}
	mock.recorder = &MockFavoriteRepoMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockFavoriteRepo) EXPECT() *MockFavoriteRepoMockRecorder {
	return m.recorder
}

// CountFavoritesByArticleID mocks base method.
func (m *MockFavoriteRepo) CountFavoritesByArticleID(articleID int) (int64, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CountFavoritesByArticleID", articleID)
	ret0, _ := ret[0].(int64)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CountFavoritesByArticleID indicates an expected call of CountFavoritesByArticleID.
func (mr *MockFavoriteRepoMockRecorder) CountFavoritesByArticleID(articleID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CountFavoritesByArticleID", reflect.TypeOf((*MockFavoriteRepo)(nil).CountFavoritesByArticleID), articleID)
}

// DoFavoriteArticle mocks base method.
func (m *MockFavoriteRepo) DoFavoriteArticle(articleID, accountID int) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DoFavoriteArticle", articleID, accountID)
	ret0, _ := ret[0].(error)
	return ret0
}

// DoFavoriteArticle indicates an expected call of DoFavoriteArticle.
func (mr *MockFavoriteRepoMockRecorder) DoFavoriteArticle(articleID, accountID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DoFavoriteArticle", reflect.TypeOf((*MockFavoriteRepo)(nil).DoFavoriteArticle), articleID, accountID)
}

// UnFavoriteArticle mocks base method.
func (m *MockFavoriteRepo) UnFavoriteArticle(articleID, accountID int) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UnFavoriteArticle", articleID, accountID)
	ret0, _ := ret[0].(error)
	return ret0
}

// UnFavoriteArticle indicates an expected call of UnFavoriteArticle.
func (mr *MockFavoriteRepoMockRecorder) UnFavoriteArticle(articleID, accountID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UnFavoriteArticle", reflect.TypeOf((*MockFavoriteRepo)(nil).UnFavoriteArticle), articleID, accountID)
}
